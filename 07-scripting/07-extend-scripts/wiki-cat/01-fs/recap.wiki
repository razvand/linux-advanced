===== Recapitulare =====

==== 1. Navigare și scurtături în mediul Linux (X puncte) ====

Așa cum am discutat în laboratorul trecut, în mediul Linux folosim adesea linia de comandă și scurtături de taste pentru a naviga în/între aplicații.

Pentru a deschide o aplicație grafică în Linux putem folosi butoanele și meniurile puse la dispoziție de mediul grafic sau putem folosi combinația de taste ''Alt+F2''. Cu această combinație de taste se deschide un prompt în care tastăm numele aplicației pe care o vrem deschisă.

Apăsați combinația de taste ''Alt+F2'' și apoi tastați la prompt șirul ''gedit'' și apoi apăsați tasta ''Enter''. Vi se deschide editorul ''gedit'' cu care puteți crea și modifica fișiere. Puteți închide fereastra aplicației grafice folosind combinația de taste ''Alt+F4''.

<note>
Combinația de taste ''Alt+F2'' este similară combinației de taste ''Windows+r'' din Windows sau ''Command+Space'' din macOS.
</note>

**[1a]** Porniți în mod similar browser-ul web ''Firefox'' tastând la prompt șirul ''firefox''.

În anumite aplicații grafice precum browserele, putem deschide tab-uri (subferestre). Pentru aceasta, folosiți în ''Firefox'' combinația de taste ''Ctrl+t''. Pentru a închide un tab de browser folosiți combinația de taste ''Ctrl+w''. Atunci când aveți deschise mai multe tab-uri navigați între ele, respectiv, cu ''Alt+1'', ''Alt+2'', ''Alt+3'' etc. Pentru a accesa din taste bara de adrese unde să tastați adresa unui site, folosiți combinația de taste ''Ctrl+l''.

**[1b]** Deschideți 3 tab-uri în ''Firefox'' cu care accesați trei site-uri diferite la alegere. Apoi închideți primul și al treilea tab. Apoi închideți toată aplicația.

**[1c]** Deschideți o aplicație de tip terminal. Șirul de tastat la prompt este ''gnome-terminal''. Apoi deschideți **încă** 2 tab-uri noi (pentru un total de 3) în terminal și navigați între ele. Apoi închideți-le pe rând.

<note tip>
Pentru dechidere de tab-uri noi, folosiți combinația de taste ''Ctrl+Shift+t''. Pentru navigare, folosiți aceleași opțiuni ca în cazul ''Firefox''. Pentru închiderea unui terminal folosiți combinația de taste ''Ctrl+d''.
</note>

**[1d]** Deschideți ''Firefox'' cu 3 tab-uri într-un workspace. Deschideți un terminal cu 3 tab-uri în alt workspace. Deschideți o aplicație ''gedit'' cu tab-uri în alt workspace. Apoi navigați între workspace-uri. Apoi aduceți aplicația terminal și aplicația ''gedit'' în același workspace cu ''Firefox''.

Atunci când folosim terminalul, dorim adesea să căutăm comenzi pe care le-am folosit anterior. Pentru aceasta, în terminal, folosim combinația de taste ''Ctrl+r''. În acel moment se schimbă prompt-ul și se cere introducerea unui șir de caractere. Acel șir este căutat în comenzile anterioare și sunt identificate. Funcționalitatea poartă numele de //reverse history search//.

**[1e]** Folosind ''Ctrl+r'' căutați în istoricul de comenzi ale shell-ului comenzi care conțineau șirul ''man'' (de la //manual//). După prima comandă găsită în istorie, dacă apăsați ''Ctrl+r'' din nou vă va găsi următoarea comandă, și tot așa.

==== 2. Lucrul cu fișiere (X puncte) ====

Adesea, în mediul din linia de comandă, dorim să vedem conținut de fișiere. Pentru aceasta folosim comanda ''cat'' urmată de numele fișierului.

Tastați la promptul unui terminal comanda
<code>
cat /etc/passwd
</code>
și apăsați ''Enter''. Ca urmare a tastării comenzii, ni se afișează pe ecran conținutul fișierului ''/etc/passwd''.

<note tip>
Puteți naviga în sus sau în jos în afișarea terminalului folosind, respectiv, combinațiile de taste ''Shift+PgUp'', respectiv ''Shift+PgDn''.
</note>

**[2a]** Afișați conținutul fișierului ''/etc/hosts'' și navigați în sus sau în jos în afișarea terminalului.

O altă formă de vizualizare a unui fișier este cu ajutorul comenzii ''less''. Urmată de numele unui fișier putem vedea și parcurge fișierul.

Tastați la promtpul unui terminal comanda
<code>
less /etc/hosts
</code>
și apăsați ''Enter''. Ca urmare a tastării comenzii ni se afișează pe ecran conținutul fișierului ''/etc/hosts''.

Puteți naviga în acest fișier folosind săgețile și alte taste de navigare. Pentru a ieși din ecranul de afișare folosiți tasta ''q''.

Dacă dorim să scriem un fișier avem nevoie de un editor. Putem folosi ''Gedit'' sau putem folosi ''Vim''. Haideți să folosim ''Vim'', pentru a ne acomoda. Tastați comanda:
<code>
vim msg.txt
</code>
și apăsați ''Enter''. Vă apare ecranul editorului ''Vim''. Acum urmați pașii:
  - Apăsați tasta ''i'' ca să intrați în modul ''insert'' de introducere de conținut. Observați că apare în colțul din stânga jos mesajul ''INSERT''.
  - Acum scrieți textul ''ana are mere''.
  - Acum apăsați tasta ''Esc'' pentru a părăsi modul ''insert''. Observați că dispare din colțul stânga jos mesajul ''INSERT''.
  - Acum apăsați tastele '':w<Enter>''. Aceasta este comanda de **salvare** a fișierului.
  - Acum apăsați tastele '':q<Enter>''. Aceasta este comanda de ieșire.

Acum ați scris textul ''ana are mere'' în fișierul ''msg.txt''.

<note warning>
Editorul ''Vim'' este dificil de folosit la început. Dacă pe parcursul folosirii editorului ''Vim'' întâmpinați probleme, folosiți tasta ''Esc'' pentru a vă asigura că nu sunteți în modul ''insert'' și apoi apăsați tastele '':q!<Enter>''. Folosiți, eventual, de mai multe ori ''Esc'' și '':q!<Enter>'' și veți reuși să ieșiți din editor.
</note>

**[2b]** Folosiți, pe rând, comanda ''cat'' și comanda ''less'' pentru a afișa conținutul fișierului ''msg.txt''.

**[2c]** Folosiți ''Vim'' pentru a crea fișierul ''quote.txt'' cu mesajul ''Go ahead, make my day!''. Apoi folosiți, pe rând, comanda ''cat'' și comanda ''less'' pentru a afișa conținutul fișierului ''quote.txt''.

==== 3. Contul root (X puncte) ====

Contul privilegiat (''root'') este folosit în Linux pentru a realiza acțiuni privilegiate. De exemplu, nu putem vedea conținutul fișierului ''/etc/sudoers'' decât ca ''root''. Astfel, dacă rulăm comanda
<code>
cat /etc/sudoers
</code>
vom primi mesajul
<code>
cat: /etc/sudoers: Permission denied
</code>
pentru că nu avem permisiuni.

Pentru a rula ca utilizatorul ''root'', prefixăm comanda de mai sus cu altă comandă, anume ''sudo''. Comanda ''sudo'' rulează comanda de după ea cu permisiuni de ''root''. Astfel, comanda de mai jos va reuși și va afișa conținutul fișierului ''/etc/sudoers'':
<code>
sudo cat /etc/sudoers
</code>
Dacă este cazul, la promptul de parolă cerut veți introduce parola utilizatorului ''student'', care este tot ''student''.

Dacă vrem să obținem un prompt în care orice comandă rulează ca root vom folosi comanda
<code>
sudo su
</code>
Ca urmare a rulării comenzii ''sudo su'' vom avea acum un prompt nou, numit **prompt de root**, identificabil prin faptul că acum promptul se închide în simbolul ''#'' (//diez//) în loc de ''$'' (//dollar//).
Pentru a reveni înapoi la utilizatorul **student** vom folosi comanda ''exit''.

**[3a]** Deschideți un terminal cu 4 tab-uri. În două tab-uri obțineți prompt de ''root''; în unul din aceste două tab-uri afișați fișierul ''/etc/sudoers'' iar în celălalt fișierul ''/etc/shadow''.

----
\\
Acum o să lucrăm la partea cea mai vizibilă dintr-un sistem de operare: sistemul de fișiere. Adică vom crea, șterge, modifica și afișa fișiere, directoare, link-uri. Să începem!
